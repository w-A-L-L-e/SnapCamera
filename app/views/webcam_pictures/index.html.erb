

<!--[if IE]><script src="/excanvas.js"></script><![endif]-->

<p>
If the camera is not responding or you have problems with allowing it here in the page. </p>
<p>
Please give us permissions here on the flash plugin page : <a href="http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager06.html">flash permissions</a>

</p>

<p>

<div id="status">
Take a picture, it will last longer ;) <br/>
</div>

<div id="webcam_left">
  <div id="camera"> </div>

  <ul id="cams"> </ul>
</div>
<div id="webcam_right">
  <canvas id="canvas" height="240" width="320"></canvas>
</div>

  <p style="width:360px;text-align:center; "><a href="javascript:webcam.capture(3);void(0);">Take a picture after 3 seconds</a> | <a href="javascript:webcam.capture();void(0);">Take a picture instantly</a></p>

</p>



<script type="text/javascript">

$(function() {
        var pos = 0, ctx = null, saveCB, image = [];
        //var canvas = document.createElement("canvas");
        drawImageInCanvas();
        var canvas = document.getElementById("canvas");
        canvas.setAttribute('width', 320);
        canvas.setAttribute('height', 240);

        if (canvas.toDataURL) {
                ctx = canvas.getContext("2d");
                image = ctx.getImageData(0, 0, 320, 240);
                saveCB = function(data) {
                        var col = data.split(";");
                        var img = image;

                        for(var i = 0; i < 320; i++) {
                                var tmp = parseInt(col[i]);
                                img.data[pos + 0] = (tmp >> 16) & 0xff;
                                img.data[pos + 1] = (tmp >> 8) & 0xff;
                                img.data[pos + 2] = tmp & 0xff;
                                img.data[pos + 3] = 0xff;
                                pos+= 4;
                        }

                        if (pos >= 4 * 320 * 240) {
                                ctx.putImageData(img, 0, 0);
                                var dataURL = canvas.toDataURL("image/png");
                                var base64data  = dataURL.replace(/^data:image\/(png|jpg);base64/, "");
                                $.post("/webcam_pictures", {type: "data", image: base64data });
                                pos = 0;
                                //this can be put somewhere else, for now it's ok...
                        }
                };
        } else {
                saveCB = function(data) {
                        image.push(data);
                        pos+= 4 * 320;
                        
                        if (pos >= 4 * 320 * 240) {
                                $.post("/webcam_pictures", {type: "pixel", image: image.join('|')});
                                pos = 0;
                        }
                };
        }

    //todo use the saveCB callback here...
    //    $("#webcam").webcam({
   //             width: 320,
   //             height: 240,
   //             mode: "callback",
   //             swffile: "/download/jscam_canvas_only.swf",
   //             onSave: saveCB,
   //             onCapture: function () {
   //                     webcam.save();
   //             },

   //             debug: function (type, string) {
   //                     console.log(type + ": " + string);
   //             }
   //     });

/* php upload to be rubyfied ;)
<?php

if ($_POST['type'] == "pixel") {
        // input is in format 1,2,3...|1,2,3...|...
        $im = imagecreatetruecolor(320, 240);

        foreach (explode("|", $_POST['image']) as $y => $csv) {
                foreach (explode(";", $csv) as $x => $color) {
                        imagesetpixel($im, $x, $y, $color);
                }
        }
} else {
        // input is in format: data:image/png;base64,...
        $im = imagecreatefrompng($_POST['image']);
}

// do something with $im

?>

streaming also possible see here : http://www.xarg.org/project/jquery-webcam-plugin/
*/


    $("#camera").webcam({
          width: 320,
          height: 240,
          mode: "callback",
          swffile: "/jscam_canvas_only.swf",
          onTick: function() {},
          onTick: function(remain) {
              if (0 == remain) {
                jQuery("#status").text("Cheese!");
              } else {
                jQuery("#status").text(remain + " seconds remaining...");
              }
          },
  /*        onSave: function(data ) {
              var col = data.split(";");
              var img = image;

                for(var i = 0; i < 320; i++) {
                  var tmp = parseInt(col[i]);
                  img.data[pos + 0] = (tmp >> 16) & 0xff;
                  img.data[pos + 1] = (tmp >> 8) & 0xff;
                  img.data[pos + 2] = tmp & 0xff;
                  img.data[pos + 3] = 0xff;
                  pos+= 4;
                }

              if (pos >= 0x4B000) {
                ctx.putImageData(img, 0, 0);
                pos = 0;
              }
          },*/
          onSave: saveCB,
          onCapture: function () {
            webcam.save();
            //flash content
            jQuery("#flash").css("display", "block");
            jQuery("#flash").fadeOut("slow", function () {
              jQuery("#flash").css("opacity", 1);
            });
          },
          debug: function(type, str) {
            jQuery("#status").html(type + ": " + msg);
          },
          onLoad: function () {
            var cams = webcam.getCameraList();
            for(var i in cams) {
              jQuery("#cams").append("<li>" + cams[i] + "</li>");
            }
          }
    });



});


  function drawImageInCanvas(){
    var canvas = document.getElementById("canvas");
    if (canvas.getContext) {
      ctx = document.getElementById("canvas").getContext("2d");
      ctx.clearRect(0, 0, 320, 240);

      var img = new Image();
      img.src = "/logo.gif";

      img.onload = function() {
        ctx.drawImage(img, 129, 89);
      }
      image = ctx.getImageData(0, 0, 320, 240);
    }

  }



  //all this is for the page 'flash' effect, getting page size for full width/height diff that we hide/fade for the flashing ;)
  function getPageSize() {
    var xScroll, yScroll;

    if (window.innerHeight && window.scrollMaxY) {
      xScroll = window.innerWidth + window.scrollMaxX;
      yScroll = window.innerHeight + window.scrollMaxY;

    } else if (document.body.scrollHeight > document.body.offsetHeight){ // all but Explorer Mac
      xScroll = document.body.scrollWidth;
      yScroll = document.body.scrollHeight;
    } else { // Explorer Mac...would also work in Explorer 6 Strict, Mozilla and Safari
      xScroll = document.body.offsetWidth;
      yScroll = document.body.offsetHeight;
    }
    var windowWidth, windowHeight;

    if (self.innerHeight) { // all except Explorer
      if(document.documentElement.clientWidth){
        windowWidth = document.documentElement.clientWidth;
      } else {
        windowWidth = self.innerWidth;
      }
      windowHeight = self.innerHeight;
    } else if (document.documentElement && document.documentElement.clientHeight) { // Explorer 6 Strict Mode
      windowWidth = document.documentElement.clientWidth;
      windowHeight = document.documentElement.clientHeight;
    } else if (document.body) { // other Explorers
      windowWidth = document.body.clientWidth;
      windowHeight = document.body.clientHeight;
    }

    // for small pages with total height less then height of the viewport
    if(yScroll < windowHeight){
      pageHeight = windowHeight;
    } else {
      pageHeight = yScroll;
    }

    // for small pages with total width less then width of the viewport
    if(xScroll < windowWidth){
      pageWidth = xScroll;
    } else {
      pageWidth = windowWidth;
    }

    return [pageWidth, pageHeight];
  }


// will become depricated...
  window.addEventListener("load", function() {
    jQuery("body").append("<div id=\"flash\"></div>");
    var pageSize = getPageSize();
    jQuery("#flash").css({ height: pageSize[1] + "px" });
  }, false);


  window.addEventListener("resize", function() {
    var pageSize = getPageSize();
    jQuery("#flash").css({ height: pageSize[1] + "px" });
  }, false);
</script>


<%= render 'list', :webcam_pictures=>@webcam_pictures %>


<div class="clearfix"></div>

<br/>
<br/>
<%= link_to 'New Webcam picture', new_webcam_picture_path %>

